diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/element/animators/ReactImageMatrixAnimator.kt b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/element/animators/ReactImageMatrixAnimator.kt
index adf3186..16d7223 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/element/animators/ReactImageMatrixAnimator.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/views/element/animators/ReactImageMatrixAnimator.kt
@@ -27,14 +27,18 @@ class ReactImageMatrixAnimator(from: View, to: View) : PropertyAnimatorCreator<R
             val parentScalyY = (from.parent as View).scaleY
 
             val fromBounds = calculateBounds(from, parentScaleX, parentScalyY)
-            hierarchy.actualImageScaleType = InterpolatingScaleType(
-                    getScaleType(from),
-                    getScaleType(to),
-                    fromBounds,
-                    calculateBounds(to),
-                    PointF(from.width * parentScaleX / 2f, from.height * parentScalyY / 2f),
-                    PointF(to.width / 2f, to.height / 2f)
-            )
+            hierarchy.actualImageScaleType = getScaleType(from)?.let {
+                getScaleType(to)?.let { it1 ->
+                    InterpolatingScaleType(
+                            it,
+                            it1,
+                            fromBounds,
+                            calculateBounds(to),
+                            PointF(from.width * parentScaleX / 2f, from.height * parentScalyY / 2f),
+                            PointF(to.width / 2f, to.height / 2f)
+                    )
+                }
+            }
 
             to.layoutParams.width = max(from.width, to.width)
             to.layoutParams.height = max(from.height, to.height)
